<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">  
  <!-- 该路径下的资源不用过滤 -->
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.swf" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.ico" security="none" />
	<http pattern="/login.htm" security="none" />
	
    <http use-expressions="true" auto-config="false"
		entry-point-ref="authenticationProcessingFilterEntryPoint">
		<intercept-url pattern="/**" access="isFullyAuthenticated()" />
		<access-denied-handler ref="accessDeniedHandler" />

		<logout delete-cookies="true" invalidate-session="true"
			logout-success-url="/login.htm" logout-url="/logout.htm" />

		<!-- invalidSession.htm 是一个不存在的页面 -->
		<session-management invalid-session-url="/invalidSession.htm"
			session-fixation-protection="newSession">
			<concurrency-control session-registry-ref="sessionRegistry"
				max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>
		
		<custom-filter ref="loginProcessFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
		
	</http>
  
<beans:bean id="loginProcessFilter"
		class="com.baozun.nebulaplus.web.controller.auth.MyUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="myAuthenticationManager" />
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
		<beans:property name="authenticationSuccessHandler"
			ref="myAuthenticationSuccessHandler" />
		<beans:property name="authenticationFailureHandler"
			ref="myAuthenticationFailureHandler" />
	</beans:bean>

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
	<!--授权过滤器 -->
	<beans:bean id="myFilter"
		class="com.baozun.nebulaplus.web.interceptor.SecurityInterceptor">
		<!-- 用户拥有的权限 -->
		<beans:property name="authenticationManager" ref="myAuthenticationManager" />
		<!-- 用户是否拥有所请求资源的权限 -->
		<beans:property name="accessDecisionManager" ref="accessDecisionManagerImpl" />
		<!-- 资源与权限对应关系 -->
		<beans:property name="securityMetadataSource" ref="metadataSourceManagerImpl" />
	</beans:bean>
	
	
	<!-- 实现了UserDetailsService的Bean -->
	<authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref="userDetailManagerImpl">
			<!-- 登入 密码 采用Sha加密 -->
			<password-encoder ref="passwordEncoder">
				<salt-source user-property="username" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="userDetailManagerImpl"
		class="com.baozun.nebulaplus.manager.auth.UserDetailManagerImpl" />

	<beans:bean id="accessDecisionManagerImpl"
		class="com.baozun.nebulaplus.manager.auth.AccessDecisionManagerImpl" />

	<beans:bean id="metadataSourceManagerImpl"
		class="com.baozun.nebulaplus.manager.auth.MetadataSourceManagerImpl" />


	<!-- 用户的密码加密算法 -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="256"></beans:constructor-arg>
	</beans:bean>

	<!-- 认证成功后处理流程 -->
	<beans:bean id="myAuthenticationSuccessHandler"
		class="com.baozun.nebulaplus.web.controller.auth.MyAuthenticationSuccessHandler">
	</beans:bean>

	<!-- 请求拒绝处理，可以兼容http和ajax请求 -->
	<beans:bean id="accessDeniedHandler"
		class="com.baozun.nebulaplus.web.controller.auth.MyAccessDeniedHandlerImpl">
		<beans:property name="accessDeniedUrl" value="/access-denied.htm" />
	</beans:bean>

	<!-- 认证失败，可以兼容http和ajax请求 -->
	<beans:bean id="myAuthenticationFailureHandler"
		class="com.baozun.nebulaplus.web.controller.auth.MyAuthenticationFailureHandler">
		<beans:property name="loginFormUrl" value="/login.htm" />
	</beans:bean>

	<!-- 未登录的切入点 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint"
		class="com.baozun.nebulaplus.web.controller.auth.MyLoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.htm"></beans:property>
	</beans:bean>
</beans:beans>  